{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nvar queryString = '';\nvar prevString = '';\nvar matches = [];\nvar activeClass = 'e-active';\nvar prevElementId = '';\n/**\n * Search and focus the list item based on key code matches with list text content\n *\n * @param  { number } keyCode - Specifies the key code which pressed on keyboard events.\n * @param  { HTMLElement[]} items - Specifies an array of HTMLElement, from which matches find has done.\n * @param { number } selectedIndex - Specifies the selected item in list item, so that search will happen\n * after selected item otherwise it will do from initial.\n * @param  { boolean } ignoreCase - Specifies the case consideration when search has done.\n * @param {string} elementId - Specifies the list element ID.\n * @returns {Element} Returns list item based on key code matches with list text content.\n */\nexport function incrementalSearch(keyCode, items, selectedIndex, ignoreCase, elementId) {\n  queryString += String.fromCharCode(keyCode);\n  setTimeout(function () {\n    queryString = '';\n  }, 1000);\n  var index;\n  queryString = ignoreCase ? queryString.toLowerCase() : queryString;\n  if (prevElementId === elementId && prevString === queryString) {\n    for (var i = 0; i < matches.length; i++) {\n      if (matches[i].classList.contains(activeClass)) {\n        index = i;\n        break;\n      }\n    }\n    index = index + 1;\n    return matches[index] ? matches[index] : matches[0];\n  } else {\n    var listItems = items;\n    var strLength = queryString.length;\n    var text = void 0;\n    var item = void 0;\n    selectedIndex = selectedIndex ? selectedIndex + 1 : 0;\n    var i = selectedIndex;\n    matches = [];\n    do {\n      if (i === listItems.length) {\n        i = -1;\n      }\n      if (i === -1) {\n        index = 0;\n      } else {\n        index = i;\n      }\n      item = listItems[index];\n      text = ignoreCase ? item.innerText.toLowerCase() : item.innerText;\n      if (text.substr(0, strLength) === queryString) {\n        matches.push(listItems[index]);\n      }\n      i++;\n    } while (i !== selectedIndex);\n    prevString = queryString;\n    prevElementId = elementId;\n    return matches[0];\n  }\n}\n/**\n * Search the list item based on given input value matches with search type.\n *\n * @param {string} inputVal - Specifies the given input value.\n * @param {HTMLElement[]} items - Specifies the list items.\n * @param {SearchType} searchType - Specifies the filter type.\n * @param {boolean} ignoreCase - Specifies the case sensitive option for search operation.\n * @returns {Element | number} Returns the search matched items.\n */\nexport function Search(inputVal, items, searchType, ignoreCase, dataSource, fields, type) {\n  var listItems = items;\n  ignoreCase = ignoreCase !== undefined && ignoreCase !== null ? ignoreCase : true;\n  var itemData = {\n    item: null,\n    index: null\n  };\n  if (inputVal && inputVal.length) {\n    var strLength = inputVal.length;\n    var queryStr = ignoreCase ? inputVal.toLocaleLowerCase() : inputVal;\n    queryStr = escapeCharRegExp(queryStr);\n    var _loop_1 = function (i, itemsData) {\n      var item = itemsData[i];\n      var text = void 0;\n      var filterValue;\n      if (items && dataSource) {\n        var checkField_1 = item;\n        var fieldValue_1 = fields.text.split('.');\n        dataSource.filter(function (data) {\n          Array.prototype.slice.call(fieldValue_1).forEach(function (value) {\n            if (type === 'object' && checkField_1.textContent.toString().indexOf(data[value]) !== -1 && checkField_1.getAttribute('data-value') === data[fields.value] || type === 'string' && checkField_1.textContent.toString().indexOf(data) !== -1) {\n              filterValue = type === 'object' ? data[value] : data;\n            }\n          });\n        });\n      }\n      text = dataSource && filterValue ? (ignoreCase ? filterValue.toLocaleLowerCase() : filterValue).replace(/^\\s+|\\s+$/g, '') : (ignoreCase ? item.textContent.toLocaleLowerCase() : item.textContent).replace(/^\\s+|\\s+$/g, '');\n      if (searchType === 'Equal' && text === queryStr || searchType === 'StartsWith' && text.substr(0, strLength) === queryStr || searchType === 'EndsWith' && text.substr(text.length - queryStr.length) === queryStr || searchType === 'Contains' && new RegExp(queryStr, \"g\").test(text)) {\n        itemData.item = item;\n        itemData.index = i;\n        return {\n          value: {\n            item: item,\n            index: i\n          }\n        };\n      }\n    };\n    for (var i = 0, itemsData = listItems; i < itemsData.length; i++) {\n      var state_1 = _loop_1(i, itemsData);\n      if (typeof state_1 === \"object\") return state_1.value;\n    }\n    return itemData;\n  }\n  return itemData;\n}\nexport function escapeCharRegExp(value) {\n  return value.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\nexport function resetIncrementalSearchValues(elementId) {\n  if (prevElementId === elementId) {\n    prevElementId = '';\n    prevString = '';\n    queryString = '';\n    matches = [];\n  }\n}","map":{"version":3,"names":["queryString","prevString","matches","activeClass","prevElementId","incrementalSearch","keyCode","items","selectedIndex","ignoreCase","elementId","String","fromCharCode","setTimeout","index","toLowerCase","i","length","classList","contains","listItems","strLength","text","item","innerText","substr","push","Search","inputVal","searchType","dataSource","fields","type","undefined","itemData","queryStr","toLocaleLowerCase","escapeCharRegExp","_loop_1","itemsData","filterValue","checkField_1","fieldValue_1","split","filter","data","Array","prototype","slice","call","forEach","value","textContent","toString","indexOf","getAttribute","replace","RegExp","test","state_1","resetIncrementalSearchValues"],"sources":["D:/xampp/htdocs/biolabs/biolabs/node_modules/@syncfusion/ej2-dropdowns/src/common/incremental-search.js"],"sourcesContent":["var queryString = '';\nvar prevString = '';\nvar matches = [];\nvar activeClass = 'e-active';\nvar prevElementId = '';\n/**\n * Search and focus the list item based on key code matches with list text content\n *\n * @param  { number } keyCode - Specifies the key code which pressed on keyboard events.\n * @param  { HTMLElement[]} items - Specifies an array of HTMLElement, from which matches find has done.\n * @param { number } selectedIndex - Specifies the selected item in list item, so that search will happen\n * after selected item otherwise it will do from initial.\n * @param  { boolean } ignoreCase - Specifies the case consideration when search has done.\n * @param {string} elementId - Specifies the list element ID.\n * @returns {Element} Returns list item based on key code matches with list text content.\n */\nexport function incrementalSearch(keyCode, items, selectedIndex, ignoreCase, elementId) {\n    queryString += String.fromCharCode(keyCode);\n    setTimeout(function () {\n        queryString = '';\n    }, 1000);\n    var index;\n    queryString = ignoreCase ? queryString.toLowerCase() : queryString;\n    if (prevElementId === elementId && prevString === queryString) {\n        for (var i = 0; i < matches.length; i++) {\n            if (matches[i].classList.contains(activeClass)) {\n                index = i;\n                break;\n            }\n        }\n        index = index + 1;\n        return matches[index] ? matches[index] : matches[0];\n    }\n    else {\n        var listItems = items;\n        var strLength = queryString.length;\n        var text = void 0;\n        var item = void 0;\n        selectedIndex = selectedIndex ? selectedIndex + 1 : 0;\n        var i = selectedIndex;\n        matches = [];\n        do {\n            if (i === listItems.length) {\n                i = -1;\n            }\n            if (i === -1) {\n                index = 0;\n            }\n            else {\n                index = i;\n            }\n            item = listItems[index];\n            text = ignoreCase ? item.innerText.toLowerCase() : item.innerText;\n            if (text.substr(0, strLength) === queryString) {\n                matches.push(listItems[index]);\n            }\n            i++;\n        } while (i !== selectedIndex);\n        prevString = queryString;\n        prevElementId = elementId;\n        return matches[0];\n    }\n}\n/**\n * Search the list item based on given input value matches with search type.\n *\n * @param {string} inputVal - Specifies the given input value.\n * @param {HTMLElement[]} items - Specifies the list items.\n * @param {SearchType} searchType - Specifies the filter type.\n * @param {boolean} ignoreCase - Specifies the case sensitive option for search operation.\n * @returns {Element | number} Returns the search matched items.\n */\nexport function Search(inputVal, items, searchType, ignoreCase, dataSource, fields, type) {\n    var listItems = items;\n    ignoreCase = ignoreCase !== undefined && ignoreCase !== null ? ignoreCase : true;\n    var itemData = { item: null, index: null };\n    if (inputVal && inputVal.length) {\n        var strLength = inputVal.length;\n        var queryStr = ignoreCase ? inputVal.toLocaleLowerCase() : inputVal;\n        queryStr = escapeCharRegExp(queryStr);\n        var _loop_1 = function (i, itemsData) {\n            var item = itemsData[i];\n            var text = void 0;\n            var filterValue;\n            if (items && dataSource) {\n                var checkField_1 = item;\n                var fieldValue_1 = fields.text.split('.');\n                dataSource.filter(function (data) {\n                    Array.prototype.slice.call(fieldValue_1).forEach(function (value) {\n                        if (type === 'object' && checkField_1.textContent.toString().indexOf(data[value]) !== -1 && checkField_1.getAttribute('data-value') === data[fields.value] || type === 'string' && checkField_1.textContent.toString().indexOf(data) !== -1) {\n                            filterValue = type === 'object' ? data[value] : data;\n                        }\n                    });\n                });\n            }\n            text = dataSource && filterValue ? (ignoreCase ? filterValue.toLocaleLowerCase() : filterValue).replace(/^\\s+|\\s+$/g, '') : (ignoreCase ? item.textContent.toLocaleLowerCase() : item.textContent).replace(/^\\s+|\\s+$/g, '');\n            if ((searchType === 'Equal' && text === queryStr) || (searchType === 'StartsWith' && text.substr(0, strLength) === queryStr) || (searchType === 'EndsWith' && text.substr(text.length - queryStr.length) === queryStr) || (searchType === 'Contains' && new RegExp(queryStr, \"g\").test(text))) {\n                itemData.item = item;\n                itemData.index = i;\n                return { value: { item: item, index: i } };\n            }\n        };\n        for (var i = 0, itemsData = listItems; i < itemsData.length; i++) {\n            var state_1 = _loop_1(i, itemsData);\n            if (typeof state_1 === \"object\")\n                return state_1.value;\n        }\n        return itemData;\n    }\n    return itemData;\n}\nexport function escapeCharRegExp(value) {\n    return value.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\nexport function resetIncrementalSearchValues(elementId) {\n    if (prevElementId === elementId) {\n        prevElementId = '';\n        prevString = '';\n        queryString = '';\n        matches = [];\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}